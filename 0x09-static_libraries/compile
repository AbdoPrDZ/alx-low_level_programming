#!/bin/bash

c_files=$(find .. -type f -name "*.c" ! -name "main.c")

files_to_compile=(
    "0-isupper.c"
    "0-memset.c"
    "0-strcat.c"
    "1-isdigit.c"
    "1-memcpy.c"
    "1-strncat.c"
    "100-atoi.c"
    "2-strchr.c"
    "2-strlen.c"
    "2-strncpy.c"
    "3-islower.c"
    "3-puts.c"
    "3-strcmp.c"
    "3-strspn.c"
    "4-isalpha.c"
    "4-strpbrk.c"
    "5-strstr.c"
    "6-abs.c"
    "9-strcpy.c"
    "_putchar.c"
)

mainH="#ifndef MAIN_H\n#define MAIN_H\n\n#include <stdio.h>\n\n"

for file in $c_files; do
    filename=$(basename "$file")

    if [[ " ${files_to_compile[*]} " == *" $filename "* ]]; then
        cp "$file" "$filename"
        
        funcName="${filename%.*}"
        funcName="${funcName#*-}"

        gcc -c "$file"

        dir=$(dirname "$file")

        if [[ -f "$dir/main.h" ]]; then
            mainHContent=$(<"$dir/main.h")
            IFS=$'\n' read -r -d '' -a lines <<< "$mainHContent"
            for line in "${lines[@]}"; do
                if grep -qF "$funcName" <<< "$line"; then
                    mainH+="$line\n"
                fi
            done
        fi
    fi
done

mainH+="\n#endif /* MAIN_H */"
echo -e "$mainH" > main.h

ar rcs libmy.a 0-isupper.o 0-memset.o 0-strcat.o 1-isdigit.o 1-memcpy.o 1-strncat.o 100-atoi.o 2-strchr.o 2-strlen.o 2-strncpy.o 3-islower.o 3-puts.o 3-strcmp.o 3-strspn.o 4-isalpha.o 4-strpbrk.o 5-strstr.o 6-abs.o 9-strcpy.o _putchar.o

nm libmy.a

gcc -std=gnu89 main.c -L. -lmy -o quote

./quote
